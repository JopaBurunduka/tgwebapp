import json
import sqlite3
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton, WebAppInfo
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters

# üîπ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ SQLite –∏ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã, –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
conn = sqlite3.connect('data.db', check_same_thread=False)
cursor = conn.cursor()
cursor.execute('''
CREATE TABLE IF NOT EXISTS webapp_data (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER,
    username TEXT,
    data TEXT,
    ip TEXT,
    user_agent TEXT,
    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP
)
''')
conn.commit()

# üîπ –ö–æ–º–∞–Ω–¥–∞ /start ‚Äî –æ—Ç–ø—Ä–∞–≤–∫–∞ –∫–Ω–æ–ø–∫–∏ —Å WebApp
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [[
        KeyboardButton(
            "üìè –£–∑–Ω–∞—Ç—å —Ä–∞–∑–º–µ—Ä",
            web_app=WebAppInfo(url="https://tgwebapp-mocha.vercel.app/")  # ‚Üê –∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ—é —Å—Å—ã–ª–∫—É
        )
    ]]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text("–ñ–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ —É–∑–Ω–∞–π —Ä–∞–∑–º–µ—Ä!", reply_markup=reply_markup)

# üîπ –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç WebApp
async def handle_webapp_data(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    data_raw = update.message.web_app_data.data

    try:
        data_json = json.loads(data_raw)
        size = data_json.get("size", "?")
        ip = data_json.get("ip", "")
        user_agent = data_json.get("ua", "")
    except Exception:
        size = data_raw
        ip = ""
        user_agent = ""

    cursor.execute(
        "INSERT INTO webapp_data (user_id, username, data, ip, user_agent) VALUES (?, ?, ?, ?, ?)",
        (user.id, user.username or "", size, ip, user_agent)
    )
    conn.commit()

    await update.message.reply_text(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–∏–ª: {size}")

# üîπ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
def main():
    app = ApplicationBuilder().token("8139242386:AAEM27uS51BB8fWJAMXPbsxuY_-wS1HvYRM").build()  # ‚Üê –≤—Å—Ç–∞–≤—å —Ç–æ–∫–µ–Ω —Å–≤–æ–µ–≥–æ –±–æ—Ç–∞
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.StatusUpdate.WEB_APP_DATA, handle_webapp_data))
    app.run_polling()

if __name__ == "__main__":
    main()
